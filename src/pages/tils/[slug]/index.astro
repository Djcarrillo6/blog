---
import { type CollectionEntry, getCollection } from "astro:content";
import getSortedTils from "@utils/getSortedTils";
import getPageNumbers from "@utils/getPageNumbers";
import slugify from "@utils/slugify";
import { SITE } from "@config";
import TilPost from "@layouts/TilPost.astro";
import TilPostDetails from "@layouts/TilPostDetails.astro";

export interface Props {
  tilPost: CollectionEntry<"til">;
}

export async function getStaticPaths() {
  const tils = await getCollection("til", ({ data }) => !data.draft);
  
  const tilResult = tils.map(til => ({
    params: { slug: slugify(til.data) },
    props: { til },
  }));
  
  const pagePaths = getPageNumbers(tils.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));
  
  return [...tilResult, ...pagePaths];
}

const { slug } = Astro.params;
const { tilPost } = Astro.props;

const tils = await getCollection("til");

const sortedTilPosts = getSortedTils(tils);

const totalPages = getPageNumbers(sortedTilPosts.length);

const currentPage =
  slug && !isNaN(Number(slug)) && totalPages.includes(Number(slug))
    ? Number(slug)
    : 0;
const lastTilPost = currentPage * SITE.postPerPage;
const startTilPost = lastTilPost - SITE.postPerPage;

const paginatedTilPosts = sortedTilPosts.slice(startTilPost, lastTilPost);
---

{
  tilPost ? (
    <TilPostDetails tilPost={tilPost} />
  ) : (
    <TilPost
      tilPosts={paginatedTilPosts}
      pageNum={currentPage}
      totalPages={totalPages.length}
    />
  )
}